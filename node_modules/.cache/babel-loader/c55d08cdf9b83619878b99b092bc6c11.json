{"ast":null,"code":"var _jsxFileName = \"/Users/fang/Documents/React-Complete-Guide/us-covid19/src/App.js\";\nimport React, { Component } from 'react';\nimport Map from './Component/Map';\nimport InfoBox from './Component/InfoBox';\nimport LineChart from './Component/LineChart';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      beginString: 'Hi, this is a visualization map for showing COVID-19 confirmed cases in United States. Now you can click on the map to see trend chart for each states. The open data is on the Github provided by JHU CSSE.',\n      NowState: '',\n      response: '',\n      NowSeries: [],\n      showChart: false,\n      showDynamicMap: false,\n      colors: ['#61c661', '#b1dbb9', '#c6e9c6', '#ffe693', '#ffd950', '#ffbb56', '#f2b691', '#f49a61', '#f4833d', '#f76d17', 'ff5619', '#ff3f00'],\n      stateColor: {}\n    };\n\n    this.generateColor = () => {\n      // let state_color = [];\n      let copy = this.state.response.states;\n      this.setState({\n        stateColor: copy\n      });\n      console.log(this.state.stateColor);\n\n      for (let key in this.state.response.states) {\n        let series = this.state.response.states[key].map(num => {\n          if (num <= 10) {\n            return this.state.colors[0];\n          } else if (num > 10 && num <= 100) {\n            return this.state.colors[1];\n          } else if (num > 100 && num <= 500) {\n            return this.state.colors[2];\n          } else if (num > 500 && num <= 1000) {\n            return this.state.colors[3];\n          } else if (num > 1000 && num <= 2000) {\n            return this.state.colors[4];\n          } else if (num > 2000 && num <= 4000) {\n            return this.state.colors[5];\n          } else if (num > 4000 && num <= 8000) {\n            return this.state.colors[6];\n          } else if (num > 8000 && num <= 12000) {\n            return this.state.colors[7];\n          } else if (num > 12000 && num <= 16000) {\n            return this.state.colors[8];\n          } else if (num > 16000 && num <= 20000) {\n            return this.state.colors[9];\n          } else if (num > 20000 && num <= 30000) {\n            return this.state.colors[10];\n          } else if (num > 30000) {\n            return this.state.colors[11];\n          }\n        });\n\n        if (!this.state.stateColor.hasOwnProperty(key)) {\n          console.log(key);\n          this.setState({\n            stateColor: {\n              key: series\n            }\n          }); //console.log(this.state.stateColor[key]);\n        } // this.setState({NowShow:{title:this.state.NewsType[index].sub,\n        //   content: this.state.NewsType[index].content}});\n\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api');\n      console.log(response);\n      const body = await response.json();\n      console.log(\"success\");\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.onClick = e => {\n      this.generateColor();\n      this.setState({\n        showChart: true\n      });\n      let Nowstate = e.target.getAttribute('data-name');\n      this.setState({\n        NowState: Nowstate\n      });\n\n      if (this.state.response.states.hasOwnProperty(String(Nowstate))) {\n        this.setState({\n          NowSeries: this.state.response.states[Nowstate]\n        });\n      } //console.log(this.state.response.states[Nowstate]);\n\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res\n    })) //\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      onHover: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InfoBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfoBox, {\n      nowState: this.state.NowState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), this.state.showChart ? null : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, this.state.beginString), this.state.showChart ? /*#__PURE__*/React.createElement(LineChart, {\n      series: this.state.NowSeries,\n      date: this.state.response.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }) : null));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fang/Documents/React-Complete-Guide/us-covid19/src/App.js"],"names":["React","Component","Map","InfoBox","LineChart","App","state","beginString","NowState","response","NowSeries","showChart","showDynamicMap","colors","stateColor","generateColor","copy","states","setState","console","log","key","series","map","num","hasOwnProperty","callApi","fetch","body","json","status","Error","message","onClick","e","Nowstate","target","getAttribute","String","componentDidMount","then","res","catch","err","render","date"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Map from './Component/Map';\nimport InfoBox from './Component/InfoBox';\nimport LineChart from './Component/LineChart';\nimport './App.css';\n\n\nclass App extends Component {\n\n  state = {\n    beginString:'Hi, this is a visualization map for showing COVID-19 confirmed cases in United States. Now you can click on the map to see trend chart for each states. The open data is on the Github provided by JHU CSSE.',\n    NowState:'',\n    response:'',\n    NowSeries:[],\n    showChart: false,\n    showDynamicMap: false,\n    colors:['#61c661','#b1dbb9','#c6e9c6','#ffe693','#ffd950','#ffbb56','#f2b691','#f49a61','#f4833d','#f76d17','ff5619','#ff3f00'],\n    stateColor: {}\n  }\n\n\n  generateColor=()=>{\n    // let state_color = [];\n    let copy = this.state.response.states;\n    this.setState({stateColor:copy});\n    console.log(this.state.stateColor);\n    for(let key in this.state.response.states){\n      \n      let series = this.state.response.states[key].map((num)=>{\n        if(num<=10){\n          return this.state.colors[0];\n        }\n        else if(num>10 && num<=100){\n          return this.state.colors[1];\n        }\n        else if(num>100 && num<=500){\n          return this.state.colors[2];\n        }\n        else if(num>500 && num<=1000){\n          return this.state.colors[3];\n        }\n        else if(num>1000 && num<=2000){\n          return this.state.colors[4];\n        }\n        else if(num>2000 && num<=4000){\n          return this.state.colors[5];\n        }\n        else if(num>4000 && num<=8000){\n          return this.state.colors[6];\n        }\n        else if(num>8000 && num<=12000){\n          return this.state.colors[7];\n        }\n        else if(num>12000 && num<=16000){\n          return this.state.colors[8];\n        }\n        else if(num>16000 && num<=20000){\n          return this.state.colors[9];\n        }\n        else if(num>20000 && num<=30000){\n          return this.state.colors[10];\n        }\n        else if(num>30000){\n          return this.state.colors[11];\n        }\n        \n      })\n      \n      if(!this.state.stateColor.hasOwnProperty(key)){\n        console.log(key);\n        this.setState({stateColor:{key:series}});\n        //console.log(this.state.stateColor[key]);\n      }\n      // this.setState({NowShow:{title:this.state.NewsType[index].sub,\n      //   content: this.state.NewsType[index].content}});\n    }\n  \n    \n\n  }\n  \n  componentDidMount(){\n    \n    this.callApi()\n      .then(res => this.setState({ response: res })) //\n      .catch(err => console.log(err));\n    \n  }\n  callApi = async () => {\n    const response = await fetch('/api'); \n    console.log(response);\n    const body = await response.json();\n    console.log(\"success\");\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n \n  onClick=(e)=>{\n    this.generateColor();\n    this.setState({showChart:true});\n    let Nowstate = e.target.getAttribute('data-name');\n    this.setState({NowState:Nowstate});\n\n    if(this.state.response.states.hasOwnProperty(String(Nowstate))){\n       this.setState({NowSeries:this.state.response.states[Nowstate]});\n     }\n      \n    //console.log(this.state.response.states[Nowstate]);\n  }\n\n  render() {\n\n    return(\n      <div className=\"App\">\n        <Map onHover={this.onClick}/>\n        <div className=\"InfoBox\">\n          <InfoBox nowState={this.state.NowState}/>\n          {this.state.showChart? null:\n          <p className=\"floating\">{this.state.beginString}</p>\n          }\n          {this.state.showChart?\n          <LineChart series={this.state.NowSeries} date={this.state.response.date}/>: null\n          }\n          \n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}