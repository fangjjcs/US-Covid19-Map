{"ast":null,"code":"var _jsxFileName = \"/Users/fang/Documents/React-Complete-Guide/us-covid19/src/App.js\";\nimport React, { Component } from 'react';\nimport Map from './Component/Map';\nimport InfoBox from './Component/InfoBox';\nimport LineChart from './Component/LineChart';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      beginString: 'Hi, this is a visualization map for showing COVID-19 confirmed cases in United States. Now you can click on the map to see trend chart for each states. The open data is on the Github provided by JHU CSSE.',\n      NowState: '',\n      response: '',\n      NowSeries: [],\n      showChart: false,\n      showDynamicMap: false,\n      generated: false,\n      colors: ['#33281b', '#4c3c28', '#665036', '#7f6443', '#997851', '#b28c5e', '#d68624', '#f49a61', '#ff8914', '#ff7d14', '#ff6a14', '#ff4f14'],\n      stateColor: {\n        'Alabama': ['#333'],\n        'Alaska': ['#333'],\n        'Arizona': ['#333'],\n        'Arkansas': ['#333'],\n        'California': ['#333'],\n        'Colorado': ['#333'],\n        'Connecticut': ['#333'],\n        'Delaware': ['#333'],\n        'District of Columbia': ['#333'],\n        'Florida': ['#333'],\n        'Georgia': ['#333'],\n        'Hawaii': ['#333'],\n        'Idaho': ['#333'],\n        'Illinois': ['#333'],\n        'Indiana': ['#333'],\n        'Iowa': ['#333'],\n        'Kansas': ['#333'],\n        'Kentucky': ['#333'],\n        'Louisiana': ['#333'],\n        'Maine': ['#333'],\n        'Maryland': ['#333'],\n        'Massachusetts': ['#333'],\n        'Michigan': ['#333'],\n        'Minnesota': ['#333'],\n        'Mississippi': ['#333'],\n        'Missouri': ['#333'],\n        'Montana': ['#333'],\n        'Nebraska': ['#333'],\n        'Nevada': ['#333'],\n        'New Hampshire': ['#333'],\n        'New Jersey': ['#333'],\n        'New Mexico': ['#333'],\n        'New York': ['#333'],\n        'North Carolina': ['#333'],\n        'North Dakota': ['#333'],\n        'Ohio': ['#333'],\n        'Oklahoma': ['#333'],\n        'Oregon': ['#333'],\n        'Pennsylvania': ['#333'],\n        'Rhode Island': ['#333'],\n        'South Carolina': ['#333'],\n        'South Dakota': ['#333'],\n        'Tennessee': ['#333'],\n        'Texas': ['#333'],\n        'Utah': ['#333'],\n        'Vermont': ['#333'],\n        'Virginia': ['#333'],\n        'Washington': ['#333'],\n        'West Virginia': ['#333'],\n        'Wisconsin': ['#333'],\n        'Wyoming': ['#333'],\n        'Grand Princess': ['#333']\n      },\n      DynamicColor: {\n        'Alabama': ['#333'],\n        'Alaska': ['#333'],\n        'Arizona': ['#333'],\n        'Arkansas': ['#333'],\n        'California': ['#333'],\n        'Colorado': ['#333'],\n        'Connecticut': ['#333'],\n        'Delaware': ['#333'],\n        'District of Columbia': ['#333'],\n        'Florida': ['#333'],\n        'Georgia': ['#333'],\n        'Hawaii': ['#333'],\n        'Idaho': ['#333'],\n        'Illinois': ['#333'],\n        'Indiana': ['#333'],\n        'Iowa': ['#333'],\n        'Kansas': ['#333'],\n        'Kentucky': ['#333'],\n        'Louisiana': ['#333'],\n        'Maine': ['#333'],\n        'Maryland': ['#333'],\n        'Massachusetts': ['#333'],\n        'Michigan': ['#333'],\n        'Minnesota': ['#333'],\n        'Mississippi': ['#333'],\n        'Missouri': ['#333'],\n        'Montana': ['#333'],\n        'Nebraska': ['#333'],\n        'Nevada': ['#333'],\n        'New Hampshire': ['#333'],\n        'New Jersey': ['#333'],\n        'New Mexico': ['#333'],\n        'New York': ['#333'],\n        'North Carolina': ['#333'],\n        'North Dakota': ['#333'],\n        'Ohio': ['#333'],\n        'Oklahoma': ['#333'],\n        'Oregon': ['#333'],\n        'Pennsylvania': ['#333'],\n        'Rhode Island': ['#333'],\n        'South Carolina': ['#333'],\n        'South Dakota': ['#333'],\n        'Tennessee': ['#333'],\n        'Texas': ['#333'],\n        'Utah': ['#333'],\n        'Vermont': ['#333'],\n        'Virginia': ['#333'],\n        'Washington': ['#333'],\n        'West Virginia': ['#333'],\n        'Wisconsin': ['#333'],\n        'Wyoming': ['#333'],\n        'Grand Princess': ['#333']\n      },\n      index: 0\n    };\n\n    this.generateColor = () => {\n      // let state_color = [];\n      //let copy = this.state.response.states;\n      //this.setState({stateColor:copy});\n      //console.log(this.state.stateColor);\n      //['#61c661','#b1dbb9','#c6e9c6','#ffe693','#ffd950','#ffbb56','#f2b691','#f49a61','#f4833d','#f76d17','ff5619','#ff3f00']\n      for (let key in this.state.response.states) {\n        let series = this.state.response.states[key].map(num => {\n          if (num <= 10) {\n            return this.state.colors[0];\n          } else if (num > 10 && num <= 100) {\n            return this.state.colors[1];\n          } else if (num > 100 && num <= 500) {\n            return this.state.colors[2];\n          } else if (num > 500 && num <= 1000) {\n            return this.state.colors[3];\n          } else if (num > 1000 && num <= 2000) {\n            return this.state.colors[4];\n          } else if (num > 2000 && num <= 4000) {\n            return this.state.colors[5];\n          } else if (num > 4000 && num <= 8000) {\n            return this.state.colors[6];\n          } else if (num > 8000 && num <= 12000) {\n            return this.state.colors[7];\n          } else if (num > 12000 && num <= 16000) {\n            return this.state.colors[8];\n          } else if (num > 16000 && num <= 20000) {\n            return this.state.colors[9];\n          } else if (num > 20000 && num <= 30000) {\n            return this.state.colors[10];\n          } else if (num > 30000) {\n            return this.state.colors[11];\n          }\n        });\n\n        if (this.state.DynamicColor.hasOwnProperty(key)) {\n          const newColor = this.state.DynamicColor;\n          newColor[key] = series;\n          this.setState({\n            DynamicColor: newColor\n          });\n        } else {\n          this.setState({\n            DynamicColor: { ...this.state.DynamicColor,\n              [key]: series\n            }\n          });\n        }\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api');\n      console.log(response);\n      const body = await response.json();\n      console.log(\"success\");\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.onClick = e => {\n      //this.generateColor();\n      //const oringinColor = this.state.stateColor;\n      //console.log(oringinColor);\n      this.setState({\n        showChart: true,\n        showDynamicMap: false\n      }); //this.setState({DynamicColor:oringinColor});\n\n      let Nowstate = e.target.getAttribute('data-name');\n      this.setState({\n        NowState: Nowstate\n      });\n\n      if (this.state.response.states.hasOwnProperty(String(Nowstate))) {\n        this.setState({\n          NowSeries: this.state.response.states[Nowstate]\n        });\n      } //console.log(this.state.response.states[Nowstate]);\n\n    };\n\n    this.onClickShowBtn = () => {\n      this.setState({\n        showChart: false,\n        showDynamicMap: true,\n        NowState: 'The United State'\n      });\n\n      if (!this.state.generated) {\n        this.generateColor();\n      }\n\n      this.setState({\n        generated: true\n      });\n      this.interval = setInterval(() => {\n        if (this.state.index < 12) {\n          this.setState({\n            index: this.state.index + 1\n          });\n        } else {\n          clearInterval(this.interval);\n          this.setState({\n            showChart: true,\n            showDynamicMap: false\n          });\n        }\n      }, 1000); // this.timerID = setInterval(\n      //   function(){\n      //     //i = i + 1 ;\n      //     this.setState({index: this.state.index+1});\n      //   },\n      //   1000\n      // );\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res\n    })) //\n    .catch(err => console.log(err));\n  }\n\n  // tick=()=> {\n  //   for(let i=0;i<12;i++){\n  //     console.log(i);\n  //     this.setState({\n  //       index:i\n  //     });\n  //   }\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Cockpit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"map\",\n      onHover: this.onClick,\n      data: this.state.showDynamicMap ? this.state.DynamicColor : this.state.stateColor,\n      timeIndex: this.state.index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }), this.state.showDynamicMap ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scale\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showDyBtn\",\n      onClick: this.onClickShowBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, \" Time Series\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InfoBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfoBox, {\n      nowState: this.state.NowState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), this.state.showChart ? null : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"floating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, this.state.beginString), this.state.showChart ? /*#__PURE__*/React.createElement(LineChart, {\n      series: this.state.NowSeries,\n      date: this.state.response.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }) : null));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fang/Documents/React-Complete-Guide/us-covid19/src/App.js"],"names":["React","Component","Map","InfoBox","LineChart","App","state","beginString","NowState","response","NowSeries","showChart","showDynamicMap","generated","colors","stateColor","DynamicColor","index","generateColor","key","states","series","map","num","hasOwnProperty","newColor","setState","callApi","fetch","console","log","body","json","status","Error","message","onClick","e","Nowstate","target","getAttribute","String","onClickShowBtn","interval","setInterval","clearInterval","componentDidMount","then","res","catch","err","render","date"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Map from './Component/Map';\nimport InfoBox from './Component/InfoBox';\nimport LineChart from './Component/LineChart';\nimport './App.css';\n\n\nclass App extends Component {\n\n  state = {\n    beginString:'Hi, this is a visualization map for showing COVID-19 confirmed cases in United States. Now you can click on the map to see trend chart for each states. The open data is on the Github provided by JHU CSSE.',\n    NowState:'',\n    response:'',\n    NowSeries:[],\n    showChart: false,\n    showDynamicMap: false,\n    generated: false,\n    colors:['#33281b','#4c3c28','#665036','#7f6443','#997851','#b28c5e','#d68624','#f49a61','#ff8914','#ff7d14','#ff6a14','#ff4f14'],\n    stateColor: {'Alabama':['#333'], 'Alaska':['#333'], 'Arizona':['#333'],'Arkansas':['#333'], 'California':['#333'], 'Colorado':['#333'], 'Connecticut':['#333'], 'Delaware':['#333'],'District of Columbia':['#333'], 'Florida':['#333'], 'Georgia':['#333'], 'Hawaii':['#333'], 'Idaho':['#333'],\n    'Illinois':['#333'], 'Indiana':['#333'], 'Iowa':['#333'], 'Kansas':['#333'], 'Kentucky':['#333'], 'Louisiana':['#333'],'Maine':['#333'], 'Maryland':['#333'], 'Massachusetts':['#333'], 'Michigan':['#333'], 'Minnesota':['#333'],\n    'Mississippi':['#333'], 'Missouri':['#333'], 'Montana':['#333'], 'Nebraska':['#333'], 'Nevada':['#333'],'New Hampshire':['#333'], 'New Jersey':['#333'], 'New Mexico':['#333'], 'New York':['#333'],\n    'North Carolina':['#333'], 'North Dakota':['#333'], 'Ohio':['#333'], 'Oklahoma':['#333'], 'Oregon':['#333'],'Pennsylvania':['#333'], 'Rhode Island':['#333'], 'South Carolina':['#333'], 'South Dakota':['#333'],\n    'Tennessee':['#333'], 'Texas':['#333'], 'Utah':['#333'], 'Vermont':['#333'], 'Virginia':['#333'], 'Washington':['#333'],'West Virginia':['#333'], 'Wisconsin':['#333'], 'Wyoming':['#333'],'Grand Princess':['#333']},\n    DynamicColor:{'Alabama':['#333'], 'Alaska':['#333'], 'Arizona':['#333'],'Arkansas':['#333'], 'California':['#333'], 'Colorado':['#333'], 'Connecticut':['#333'], 'Delaware':['#333'],'District of Columbia':['#333'], 'Florida':['#333'], 'Georgia':['#333'], 'Hawaii':['#333'], 'Idaho':['#333'],\n    'Illinois':['#333'], 'Indiana':['#333'], 'Iowa':['#333'], 'Kansas':['#333'], 'Kentucky':['#333'], 'Louisiana':['#333'],'Maine':['#333'], 'Maryland':['#333'], 'Massachusetts':['#333'], 'Michigan':['#333'], 'Minnesota':['#333'],\n    'Mississippi':['#333'], 'Missouri':['#333'], 'Montana':['#333'], 'Nebraska':['#333'], 'Nevada':['#333'],'New Hampshire':['#333'], 'New Jersey':['#333'], 'New Mexico':['#333'], 'New York':['#333'],\n    'North Carolina':['#333'], 'North Dakota':['#333'], 'Ohio':['#333'], 'Oklahoma':['#333'], 'Oregon':['#333'],'Pennsylvania':['#333'], 'Rhode Island':['#333'], 'South Carolina':['#333'], 'South Dakota':['#333'],\n    'Tennessee':['#333'], 'Texas':['#333'], 'Utah':['#333'], 'Vermont':['#333'], 'Virginia':['#333'], 'Washington':['#333'],'West Virginia':['#333'], 'Wisconsin':['#333'], 'Wyoming':['#333'],'Grand Princess':['#333']},\n    index:0  \n  }\n\n\n  generateColor=()=>{\n    // let state_color = [];\n    //let copy = this.state.response.states;\n    //this.setState({stateColor:copy});\n    //console.log(this.state.stateColor);\n    //['#61c661','#b1dbb9','#c6e9c6','#ffe693','#ffd950','#ffbb56','#f2b691','#f49a61','#f4833d','#f76d17','ff5619','#ff3f00']\n\n    for(let key in this.state.response.states){\n      \n      let series = this.state.response.states[key].map((num)=>{\n        if(num<=10){\n          return this.state.colors[0];\n        }\n        else if(num>10 && num<=100){\n          return this.state.colors[1];\n        }\n        else if(num>100 && num<=500){\n          return this.state.colors[2];\n        }\n        else if(num>500 && num<=1000){\n          return this.state.colors[3];\n        }\n        else if(num>1000 && num<=2000){\n          return this.state.colors[4];\n        }\n        else if(num>2000 && num<=4000){\n          return this.state.colors[5];\n        }\n        else if(num>4000 && num<=8000){\n          return this.state.colors[6];\n        }\n        else if(num>8000 && num<=12000){\n          return this.state.colors[7];\n        }\n        else if(num>12000 && num<=16000){\n          return this.state.colors[8];\n        }\n        else if(num>16000 && num<=20000){\n          return this.state.colors[9];\n        }\n        else if(num>20000 && num<=30000){\n          return this.state.colors[10];\n        }\n        else if(num>30000){\n          return this.state.colors[11];\n        }\n        \n      })\n      \n      if(this.state.DynamicColor.hasOwnProperty(key)){   \n        const newColor  = this.state.DynamicColor;\n        newColor[key] = series;\n        this.setState({DynamicColor:newColor});\n      }\n      else{\n        this.setState({DynamicColor:{...this.state.DynamicColor, [key]:series}});\n      }\n    }\n\n  }\n\n  componentDidMount(){\n    \n    this.callApi()\n      .then(res => this.setState({ response: res })) //\n      .catch(err => console.log(err));\n\n    \n    \n  }\n  callApi = async () => {\n    const response = await fetch('/api'); \n    console.log(response);\n    const body = await response.json();\n    console.log(\"success\");\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n \n  onClick=(e)=>{\n    //this.generateColor();\n    //const oringinColor = this.state.stateColor;\n    //console.log(oringinColor);\n    this.setState({showChart:true,showDynamicMap: false});\n    //this.setState({DynamicColor:oringinColor});\n    let Nowstate = e.target.getAttribute('data-name');\n    this.setState({NowState:Nowstate});\n\n    if(this.state.response.states.hasOwnProperty(String(Nowstate))){\n       this.setState({NowSeries:this.state.response.states[Nowstate]});\n     }\n      \n    //console.log(this.state.response.states[Nowstate]);\n  }\n\n  onClickShowBtn=()=>{\n    this.setState({showChart: false,showDynamicMap: true,NowState:'The United State'});\n    if(!this.state.generated){\n      this.generateColor();\n    }\n    this.setState({generated:true});\n\n    this.interval = setInterval(() => {\n      if (this.state.index < 12) {\n        this.setState({index: this.state.index+1});     \n      } else {\n        clearInterval(this.interval);\n        this.setState({showChart:true,showDynamicMap: false});\n      }\n    }, 1000);\n    // this.timerID = setInterval(\n    //   function(){\n    //     //i = i + 1 ;\n    //     this.setState({index: this.state.index+1});\n    //   },\n    //   1000\n    // );\n    \n  }\n\n  // tick=()=> {\n  //   for(let i=0;i<12;i++){\n  //     console.log(i);\n  //     this.setState({\n  //       index:i\n  //     });\n  //   }\n  // }\n\n  render() {\n    \n    return(\n      <div className=\"App\">\n        <div className=\"Cockpit\">\n          <Map className=\"map\" onHover={this.onClick} data={this.state.showDynamicMap?this.state.DynamicColor:this.state.stateColor} timeIndex={this.state.index}/> \n          {this.state.showDynamicMap?<div className=\"scale\"></div>:null}\n          <div className=\"showDyBtn\" onClick={this.onClickShowBtn}> Time Series</div>\n        </div>\n        <div className=\"InfoBox\">\n          <InfoBox nowState={this.state.NowState}/>\n          {this.state.showChart? null:\n          <p className=\"floating\">{this.state.beginString}</p>\n          }\n          {this.state.showChart?\n          <LineChart series={this.state.NowSeries} date={this.state.response.date}/>: null\n          }\n          \n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}